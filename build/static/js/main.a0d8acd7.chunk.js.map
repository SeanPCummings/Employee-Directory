{"version":3,"sources":["components/Employee.js","components/EmployeeList.js","components/EmployeeEdit.js","components/App.js","index.js"],"names":["Employee","props","useContext","EmployeeContext","handleEmployeeDelete","handleEmployeeSelect","id","name","role","className","onClick","EmployeeList","employees","handleEmployeeAdd","handleEmployeeSearch","type","placeholder","value","onChange","e","target","map","data","EmployeeEdit","employee","handleEmployeeChange","handleChange","changes","undefined","htmlFor","onInput","React","createContext","LOCAL_STORAGE_KEY","sampleEmployees","App","useState","selectedEmployeeId","setSelectedEmployeeId","setEmployee","search","setSearch","filteredEmployees","setFilteredEmployees","employeeContextValue","newEmployee","uuidv4","filter","index","findIndex","r","activeList","selectedEmployee","find","useEffect","toLowerCase","startsWith","employeeJSON","localStorage","getItem","JSON","parse","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d8acd7.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { EmployeeContext } from './App'\n\nexport default function Employee(props) { \n    const { handleEmployeeDelete, handleEmployeeSelect } = useContext(EmployeeContext);\n    const {\n        id,\n        name, \n        role\n    } = props;\n    return (\n        <div className=\"\">\n            <div className=\"\">\n                <h3 className=\"\">{name}</h3>\n                <div>\n                    <button className=\"\" onClick={()=> handleEmployeeSelect(id)}>Edit</button>\n                    <button className=\"\" onClick={()=> handleEmployeeDelete(id)}>Delete</button>\n                </div>\n            </div>\n            <div className=\"\">\n                <span className=\"\">Role:</span>\n                <span className=\"\">{role}</span>\n            </div>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport Employee from './Employee'\nimport { EmployeeContext } from './App'\n\nexport default function EmployeeList({ employees }) {\n    const { handleEmployeeAdd } = useContext(EmployeeContext);\n    const { handleEmployeeSearch } = useContext(EmployeeContext);\n    \n    return (\n        <div className=\"\">\n            <h1>Employee Directory</h1>\n            <input type=\"text\" name=\"search\" id=\"search\" className=\"\" placeholder=\"search\" value={employees.name} onChange={e =>handleEmployeeSearch(e.target.value)}/>\n            <div>\n                {employees.map(data => {\n                    return (\n                        <Employee key={data.id} {...data}/>\n                    )\n                })}\n            </div>\n            <div className=\"\">\n                <button className=\"\" onClick={handleEmployeeAdd}>\n                    Add Employee\n                </button>\n            </div>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { EmployeeContext } from './App'\n\nexport default function EmployeeEdit({ employee }) {\n    const { handleEmployeeChange, handleEmployeeSelect } = useContext(EmployeeContext);\n\n    //creates a brand new object that saves the changes user makes to employee\n    function handleChange(changes) {\n        handleEmployeeChange(employee.id, { ...employee, ...changes })\n    }\n\n    return (\n        <div className=\"employee-edit\">\n            <div className=\"employee-edit__remove-button-container\">\n                <button className=\"btn employee-edit__remove-button\" onClick={()=> handleEmployeeSelect(undefined)}>&times;</button>\n            </div>\n            <div className=\"employee-edit__grid\">\n                <label htmlFor=\"name\" className=\"employee-edit__label\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" className=\"employee-edit__input\" value={employee.name} onInput={e => handleChange({ name: e.target.value })} />\n                <label htmlFor=\"role\" className=\"employee-edit__label\">Role</label>\n                <input type=\"text\" name=\"role\" id=\"role\" className=\"employee-edit__input\" value={employee.role} onInput={e => handleChange({ role: e.target.value })} />\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport EmployeeList from './EmployeeList';\nimport EmployeeEdit from './EmployeeEdit';\nimport '../css/App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const EmployeeContext = React.createContext()\nconst LOCAL_STORAGE_KEY = 'employeeDirectory.employees'\n\n\nfunction App() {\n  //set states\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState();\n  const [employees, setEmployee] = useState(sampleEmployees);\n  const [search, setSearch] = useState('');\n  const [filteredEmployees, setFilteredEmployees] = useState();\n\n  //Context\n  const employeeContextValue = {\n    handleEmployeeAdd,\n    handleEmployeeDelete, \n    handleEmployeeSelect,\n    handleEmployeeChange,\n    handleEmployeeSearch\n  }\n\n  // sets filtered name to displayed list\n  let activeList = employees;\n  if(search !== ''){activeList = filteredEmployees;}\n\n  // employee selected for edit\n  const selectedEmployee = employees.find(employee => employee.id === selectedEmployeeId);\n\n  // filter employees by name\n  useEffect(()=> {\n    setFilteredEmployees(\n      employees.filter(employee => {\n        if(search === ''){return true;}\n        return employee.name.toLowerCase().startsWith(search.toLowerCase());\n      })\n    )\n  }, [search, employees])\n\n  // load from local storage\n  useEffect(()=>{\n    const employeeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (employeeJSON != null) setEmployee(JSON.parse(employeeJSON))\n  }, [])\n\n  // save to local storage\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(employees))\n  }, [employees])\n\n  // handle employee search\n  function handleEmployeeSearch(name) {\n    setSearch(name)\n  }\n\n  // handle selected employee\n  function handleEmployeeSelect(id) {\n    setSelectedEmployeeId(id)\n  }\n\n  // handle adding employee\n  function handleEmployeeAdd(){\n    const newEmployee = {\n      id: uuidv4(),\n      name: 'New',\n      role: 1\n    }\n    setSelectedEmployeeId(newEmployee.id)\n    setEmployee([...employees, newEmployee])\n  }\n\n  // handle employee edit\n  function handleEmployeeChange(id, employee){\n    const newEmployee = [...employees];\n    const index = newEmployee.findIndex(r => r.id ===id);\n    newEmployee[index] = employee;\n    setEmployee(newEmployee)\n  }\n\n  // handle employee delete\n  function handleEmployeeDelete(id){\n    setEmployee(employees.filter(employee => employee.id !== id))\n  }\n  \n  return (\n    <EmployeeContext.Provider value={employeeContextValue}>\n      <EmployeeList employees={activeList} />\n      {selectedEmployee && <EmployeeEdit employee={selectedEmployee} />}\n    </EmployeeContext.Provider>\n  )\n}\n\n// sample data\nconst sampleEmployees = [\n  {\n    id: 1,\n    name: 'Jane Doe',\n    role: 'Engineer'\n  },\n  {\n    id: 2,\n    name: 'John Doe',\n    role: 'Programmer'\n  },\n  {\n    id: 3,\n    name: 'Niomi Gentz',\n    role: 'Accountant'\n  },\n  {\n    id: 4,\n    name: 'Asher Velasquez',\n    role: 'Manager'\n  },\n  {\n    id: 5,\n    name: 'Cira Sudapoya',\n    role: 'Designer'\n  },\n  {\n    id: 6,\n    name: 'Yuki Kinoshita',\n    role: 'IT'\n  },\n\n]\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}